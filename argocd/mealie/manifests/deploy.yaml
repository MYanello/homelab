apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mealie
  name: mealie
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mealie
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: mealie
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - marcus-server
      containers:
        - image: ghcr.io/mealie-recipes/mealie:v3.0.1@sha256:4d7542becc4f5a2a87c13f1073c974430006f56207278ade541bd93450b8fb5f
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: '1000m'
              memory: 2Gi
            requests:
              cpu: 300m
              memory: 350Mi
          name: mealie
          env:
            - name: ALLOW_SIGNUP
              value: "true"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: BASE_URL
              value: "https://recipes.yanello.net"
            - name: TZ
              value: "America/Chicago"
            - name: BASE_URL
              value: "https://recipes.yanello.net"
            - name: OIDC_AUTH_ENABLED
              value: "true"
            - name: OIDC_SIGNUP_ENABLED
              value: "true"
            - name: OIDC_REMEMBER_ME
              value: "true"
            - name: OIDC_PROVIDER_NAME
              value: "Authentik"
            - name: OIDC_USER_GROUP
              value: "users"
            - name: OIDC_ADMIN_GROUP
              value: "admin"
          envFrom:
            - secretRef:
                name: mealie-secrets
          ports:
            - containerPort: 9000
              protocol: TCP
          volumeMounts:
            - mountPath: /app/data
              name: data
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 9000
          #   initialDelaySeconds: 30
          #   periodSeconds: 30
          #   timeoutSeconds: 5
          #   failureThreshold: 10
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 9000
          #   initialDelaySeconds: 60
          #   periodSeconds: 15
          #   timeoutSeconds: 5
          #   failureThreshold: 5
      restartPolicy: Always
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
---