apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: snapraid-storage
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  labels:
    name: snapraid-storage
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
spec:
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  project: default
  source:
    chart: nfs-subdir-external-provisioner
    repoURL: https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner
    targetRevision: '4.0.18'
    helm:
      releaseName: snapraid-storage
      valuesObject:
        tolerations:
          - key: node.kubernetes.io/not-ready
            operator: Exists
            effect: NoExecute
            tolerationSeconds: 300
          - key: node.kubernetes.io/unreachable
            operator: Exists
            effect: NoExecute
            tolerationSeconds: 300
          - key: node-role.kubernetes.io/control-plane
            operator: Exists
            effect: NoSchedule
        nfs:
          server: marcus-server.lan
          volumeName: snapraid-storage
          path: /data/k8s/
        storageClass:
          onDelete: retain
          pathPattern: ${.PVC.namespace}/${.PVC.name}
          name: snapraid-storage
        provisionerName: k8s-sigs.io/nfs-storage
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: NotIn
                      values:
                        - marcus-server
  destination:
    server: "https://kubernetes.default.svc"
    namespace: snapraid