csiDriver:
  # should be globally unique for a given cluster
  name: "org.democratic-csi.nfs.hdd"

node:
  tolerations:
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"

controller:
  driver:
    image:
      tag: next

# add note here about volume expansion requirements
storageClasses:
  - name: truenas-hdd-nfs
    defaultClass: false
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
    allowVolumeExpansion: true
    parameters:
      # for block-based storage can be ext3, ext4, xfs
      # for nfs should be nfs
      fsType: nfs

      # if true, volumes created from other snapshots will be
      # zfs send/received instead of zfs cloned
      # detachedVolumesFromSnapshots: "false"

      # if true, volumes created from other volumes will be
      # zfs send/received instead of zfs cloned
      # detachedVolumesFromVolumes: "false"

    mountOptions:
      - nfsvers=4.1
      - nconnect=8
      - hard
      - intr
      - rsize=131072
      - wsize=131072
      - timeo=600
      - retrans=2
    secrets:
      provisioner-secret:
      controller-publish-secret:
      node-stage-secret:
      #      # any arbitrary iscsiadm entries can be add by creating keys starting with node-db.<entry.name>
      #      # if doing CHAP
      #      node-db.node.session.auth.authmethod: CHAP
      #      node-db.node.session.auth.username: foo
      #      node-db.node.session.auth.password: bar
      #
      #      # if doing mutual CHAP
      #      node-db.node.session.auth.username_in: baz
      #      node-db.node.session.auth.password_in: bar
      node-publish-secret:
      controller-expand-secret:

# if your cluster supports snapshots you may enable below
# volumeSnapshotClasses:
#   - name: truenas-nfs-csi
#     parameters:
#       # if true, snapshots will be created with zfs send/receive
#       detachedSnapshots: "false"
#     secrets:
#       snapshotter-secret:
#- name: freenas-iscsi-csi
#  parameters:
#  # if true, snapshots will be created with zfs send/receive
#  # detachedSnapshots: "false"
#  secrets:
#    snapshotter-secret:

driver:
  existingConfigSecret: democratic-secret
  config:
    driver: freenas-api-nfs
