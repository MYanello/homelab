apiVersion: apps/v1
kind: Deployment
metadata:
  name: dawarich-sidekiq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dawarich-sidekiq
  template:
    metadata:
      labels:
        app: dawarich-sidekiq
    spec:
      containers:
      - name: sidekiq
        image: freikin/dawarich:latest
        command: ["sidekiq-entrypoint.sh"]
        args: ["sidekiq"]
        env:
        - name: RAILS_ENV
          value: development
        - name: REDIS_URL
          value: redis://dawarich-redis:6379
        - name: DATABASE_HOST
          value: dawarich-db
        - name: DATABASE_USERNAME
          value: postgres
        - name: DATABASE_PASSWORD
          value: password
        - name: DATABASE_NAME
          value: dawarich_development
        - name: APPLICATION_HOSTS
          value: localhost
        - name: BACKGROUND_PROCESSING_CONCURRENCY
          value: "10"
        - name: APPLICATION_PROTOCOL
          value: http
        - name: PROMETHEUS_EXPORTER_ENABLED
          value: "false"
        - name: PROMETHEUS_EXPORTER_HOST
          value: dawarich-app
        - name: PROMETHEUS_EXPORTER_PORT
          value: "9394"
        - name: SELF_HOSTED
          value: "true"
        - name: STORE_GEODATA
          value: "true"
        volumeMounts:
        - name: public
          mountPath: /var/app/public
        - name: watched
          mountPath: /var/app/tmp/imports/watched
        - name: storage
          mountPath: /var/app/storage
        livenessProbe:
          exec:
            command: ["pgrep", "-f", "sidekiq"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 30
        readinessProbe:
          exec:
            command: ["pgrep", "-f", "sidekiq"]
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        stdin: true
        tty: true
      volumes:
      - name: public
        persistentVolumeClaim:
          claimName: dawarich-public
      - name: watched
        persistentVolumeClaim:
          claimName: dawarich-watched
      - name: storage
        persistentVolumeClaim:
          claimName: dawarich-storage
      restartPolicy: Always
