apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  serviceName: postgres
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #             - key: kubernetes.io/hostname
      #               operator: In
      #               values:
      #                 - marcus-server
      # securityContext:
      #   runAsUser: 1000
      #   runAsGroup: 1000
      #   fsGroup: 1000
      containers:
        # - command: ["sleep", "inf"]
        - env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: immich-config
                  key: DB_DATABASE_NAME
            - name: POSTGRES_INITDB_ARGS
              value: "--data-checksums"
            - name: DB_STORAGE_TYPE
              value: "SSD"
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: immich-config
                  key: DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-secrets
                  key: DB_PASSWORD
          image: ghcr.io/immich-app/postgres:16-vectorchord0.3.0-pgvectors0.2.0@sha256:5de86005c298abdf351b1e0ba2c5d47cc571eff0f9f9815eccc19821a2bd0b13
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  pg_isready --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}" || exit 1;
                  Chksum="$(psql --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
                  echo "checksum failure count is $$Chksum";
                  [ "$Chksum" = '0' ] || exit 1
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}"
            initialDelaySeconds: 5
            periodSeconds: 10
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: 500Mi
              cpu: 100m
            limits:
              memory: 1Gi
              cpu: 300m
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: postgres-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: longhorn-xfs
        resources:
          requests:
            storage: 10Gi
---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: postgres14-migration
#   labels:
#     app: postgres14-migration
# spec:
#   restartPolicy: Never
#   affinity:
#     nodeAffinity:
#       requiredDuringSchedulingIgnoredDuringExecution:
#         nodeSelectorTerms:
#           - matchExpressions:
#               - key: kubernetes.io/hostname
#                 operator: In
#                 values:
#                   - marcus-server
#   containers:
#     - name: postgres14
#       image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:8d292bdb796aa58bbbaa47fe971c8516f6f57d6a47e7172e62754feb6ed4e7b0
#       imagePullPolicy: IfNotPresent
#       env:
#         - name: POSTGRES_DB
#           value: "immich"
#         - name: POSTGRES_USER
#           value: "marcus"
#         - name: POSTGRES_PASSWORD
#           valueFrom:
#             secretKeyRef:
#               name: immich-secrets
#               key: DB_PASSWORD
#         - name: POSTGRES_INITDB_ARGS
#           value: "--data-checksums"
#         - name: DB_STORAGE_TYPE
#           value: "HDD"
#       ports:
#         - containerPort: 5432
#           protocol: TCP
#       volumeMounts:
#         - name: pg14-data
#           mountPath: /var/lib/postgresql/data
#         - name: backup-volume
#           mountPath: /backup
#       securityContext:
#         runAsUser: 1000
#         runAsGroup: 1000
#       resources:
#         requests:
#           memory: 500Mi
#           cpu: 100m
#         limits:
#           memory: 1Gi
#           cpu: 300m
#   volumes:
#     - name: pg14-data
#       hostPath:
#         path: /zpool/k8s/immich/db
#         type: Directory
#     - name: backup-volume
#       hostPath:
#         path: /zpool/k8s/immich/backup
#         type: DirectoryOrCreate
# ---
