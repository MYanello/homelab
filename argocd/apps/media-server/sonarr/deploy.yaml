apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f sonarr.yaml convert
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: sonarr
  name: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: sonarr
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f sonarr.yaml convert
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: sonarr
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - marcus-server
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: America/Chicago
          image: linuxserver/sonarr:latest@sha256:28d9dcbc846aed74bd47dc90305e016183443ddc3dfa3e8bcac268fc653a6e5e
          imagePullPolicy: IfNotPresent
          name: sonarr
          ports:
            - containerPort: 8989
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data/media
              name: media
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 8989
          #   initialDelaySeconds: 30
          #   periodSeconds: 30
          #   timeoutSeconds: 5
          #   failureThreshold: 5
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 8989
          #   initialDelaySeconds: 300
          #   periodSeconds: 30
          #   timeoutSeconds: 5
          #   failureThreshold: 10
          # resources:
          #   limits:
          #     cpu: 200m
          #     memory: 600Mi
          #   requests:
          #     cpu: 50m
          #     memory: 400Mi
      restartPolicy: Always
      volumes:
        - name: config
          hostPath:
            path: /zpool/k8s/sonarr/config
          # persistentVolumeClaim:
          #   claimName: config
        - name: media
          hostPath:
            path: /data/media
          # nfs:
          #   server: marcus-server.lan
          #   path: /data/media