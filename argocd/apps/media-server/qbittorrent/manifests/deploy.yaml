apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: qbittorrent
  name: qbittorrent
spec:
  selector:
    matchLabels:
      app: qbittorrent
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - marcus-server
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      containers:
      - name: qbittorrent
        env:
          - name: PGID
            value: "1000"
          - name: PUID
            value: "1000"
          - name: DOCKER_MODS
            value: "ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest"
        image: lscr.io/linuxserver/qbittorrent:latest@sha256:2262eebcfe3b1d7804c3f88c0dcc51fc760f3c5dbe1edef4cbd88d5cbe16f0a9
        imagePullPolicy: Always
        resources:
          requests:
            memory: "4Gi"
            cpu: "250m"
          limits:
            memory: "6Gi"
            cpu: "500m"
        ports:
          - name: qbit-webui
            containerPort: 8080
            protocol: TCP
        volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /data/media/torrents
            name: torrents
        startupProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 20
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 10
      initContainers:
      - name: gluetun # init sidecar for VPN connection
        image: "ghcr.io/qdm12/gluetun:latest@sha256:183c74263a07f4c931979140ac99ff4fbc44dcb1ca5b055856ef580b0fafdf1c"
        restartPolicy: Always # makes this init into a sidecar container k8s 1.29
        imagePullPolicy: IfNotPresent
        ports:
        - name: http-proxy
          containerPort: 8888
          protocol: TCP
        - name: tcp-shadowsocks
          containerPort: 8388
          protocol: TCP
        - name: udp-shadowsocks
          containerPort: 8388
          protocol: UDP
        - name: qbit-http
          containerPort: 8080
          protocol: TCP
        envFrom:
        - secretRef:
            name: vpn-secrets
        env:
        - name: TZ
          value: "America/Chicago"
        - name: FIREWALL_INPUT_PORTS
          value: "8080" # <- the port for qbittorrent container otherwise blocked by gluetun firewall in same pod
        - name: VPN_SERVICE_PROVIDER
          value: custom
        - name: VPN_TYPE
          value: wireguard
        - name: VPN_PORT_FORWARDING
          value: "on"
        - name: VPN_PORT_FORWARDING_PROVIDER
          value: protonvpn
        - name: FIREWALL_DEBUG
          value: "on"
        # - name: VPN_PORT_FORWARDING_UP_COMMAND
        #   value: /bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://qbittorrent:8080/api/v2/app/setPreferences 2>&1'
        # - name: DNS_KEEP_NAMESERVER
        #   value: "on"
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
        # startupProbe:
        #   exec:
        #     command: ["/gluetun-entrypoint", "healthcheck"]
        #   initialDelaySeconds: 60
        #   periodSeconds: 5
        #   timeoutSeconds: 5
        #   failureThreshold: 3
        # livenessProbe:
        #   exec:
        #     command: ["/gluetun-entrypoint", "healthcheck"]
        #   initialDelaySeconds: 10
        #   periodSeconds: 5
        #   timeoutSeconds: 5
        #   failureThreshold: 3
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config
        - name: torrents
          hostPath:
            path: /data/media/torrents
          # nfs:
          #   server: marcus-server.lan
          #   path: /data/media/torrents
