apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f radarr.yaml convert
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: radarr
  name: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: radarr
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f radarr.yaml convert
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: radarr
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - marcus-server
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: America/Chicago
          image: linuxserver/radarr:latest@sha256:0a8020afc5e3dcad1413ba125a980729a2b16ff0d88d108b3e1779111ef1c896
          imagePullPolicy: IfNotPresent
          name: radarr
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 300Mi
          ports:
            - containerPort: 7878
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data/media
              name: media
          readinessProbe:
            httpGet:
              path: /
              port: 7878
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 7878
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
      restartPolicy: Always
      volumes:
        - name: config
          hostPath:
            path: /zpool/k8s/radarr/config
          # persistentVolumeClaim:
          #   claimName: config
        - name: media
          hostPath:
            path: /data/media
          # nfs:
          #   server: marcus-server.lan
          #   path: /data/media

        # - name: media
        #   nfs:
        #     server: marcus-server.lan
        #     path: /data/media
