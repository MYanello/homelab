apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  labels:
    app: immich-server
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: immich-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: immich-server
    spec:
      containers:
        - env:
            - name: DB_HOSTNAME
              value: immich
            - name: DB_DATABASE_NAME
              value: immich
            - name: REDIS_HOSTNAME
              value: immich
            - name: MACHINE_LEARNING_PRELOAD__CLIP
              value: ViT-L-16-SigLIP-256__webli
          envFrom:
            - secretRef:
                name: immich-secrets
          image: ghcr.io/immich-app/immich-server:release
          ports:
            - containerPort: 2283
              protocol: TCP
            - containerPort: 3000
              protocol: TCP
          imagePullPolicy: Always
          name: immich-server
          volumeMounts:
            - name: photos
              mountPath: /usr/src/app/upload
      volumes:
        - name: photos
          nfs:
            server: marcus-server.lan
            path: /zpool/Photos/immich
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-ml
  labels:
    app: immich-ml
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: immich-ml
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: immich-ml
    spec:
      nodeSelector:
        nvidia.com/gpu.present: "true"
      containers:
        - env:
            - name: DB_HOSTNAME
              value: postgres
            - name: DB_DATABASE_NAME
              value: immich
            - name: REDIS_HOSTNAME
              value: redis
            - name: MACHINE_LEARNING_PRELOAD__CLIP
              value: ViT-L-16-SigLIP-256__webli
          envFrom:
            - secretRef:
                name: immich-secrets
          image: ghcr.io/immich-app/immich-machine-learning:release
          imagePullPolicy: Always
          name: immich-ml
          volumeMounts:
            - name: photos
              mountPath: /usr/src/app/upload
      volumes:
        - name: photos
          nfs:
            server: marcus-server.lan
            path: /zpool/Photos/immich
        - name: model-cache
          persistentVolumeClaim:
            claimName: model-cache
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: typesense
  labels:
    app: typesense
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: typesense
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: typesense
    spec:
      containers:
        - env:
            - name: TYPESENSE_DATA_DIR
              value: /data
          envFrom:
            - secretRef:
                name: immich-secrets
          image: typesense/typesense:0.24.0
          imagePullPolicy: IfNotPresent
          name: typesense
          volumeMounts:
            - name: tsdata
              mountPath: /data
      volumes:
        - name: tsdata
          persistentVolumeClaim:
            claimName: tsdata
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: docker.io/redis:6.2-alpine@sha256:905c4ee67b8e0aa955331960d2aa745781e6bd89afc44a8584bfd13bc890f0ae
          imagePullPolicy: IfNotPresent
          name: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: init-postgres
          image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
          command: ["sh", "-c", "test -d /var/lib/postgresql/data/pgdata || initdb -D /var/lib/postgresql/data/pgdata"]
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
      containers:
        - env:
            - name: POSTGRES_DB
              value: immich
            - name: POSTGRES_INITDB_ARGS
              value: '--data-checksums'
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-secrets
                  key: DB_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: immich-secrets
                  key: DB_USERNAME
          image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          command: 
            - postgres
            - -c
            - shared_preload_libraries=vectors.so
            - -c
            - 'search_path="$user", public, vectors'
            - -c
            - logging_collector=on
            - -c
            - max_wal_size=2GB
            - -c
            - shared_buffers=512MB
            - -c
            - wal_compression=on
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: db
---