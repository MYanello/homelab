apiVersion: v1
kind: ConfigMap
metadata:
  name: resume-config
data:
  DB_HOSTNAME: postgres
  DB_DATABASE_NAME: postgres
  DB_USERNAME: postgres
  REDIS_HOSTNAME: "redis"
  REDIS_PORT: "6379"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app: minio
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - env:
            - name: MINIO_ROOT_USER
              value: minioadmin
          envFrom:
            - secretRef:
                name: resume-secrets
          image: minio/minio:latest
          imagePullPolicy: Always
          name: minio
          volumeMounts:
            - name: minio
              mountPath: /data
          ports:
            - containerPort: 9000
              protocol: TCP
      volumes:
        - name: minio
          persistentVolumeClaim:
            claimName: minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: docker.io/redis:6.2-alpine
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
            - containerPort: 6379
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: resume-config
                  key: DB_DATABASE_NAME
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: resume-config
                  key: DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: resume-secrets
                  key: DB_PASSWORD
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  pg_isready --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}" || exit 1;
                  Chksum="$(psql --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
                  echo "checksum failure count is $$Chksum";
                  [ "$Chksum" = '0' ] || exit 1
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}"
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chrome
  labels:
    app: chrome
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: chrome
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: chrome
    spec:
      containers:
        - image: ghcr.io/browserless/chromium:latest
          imagePullPolicy: Always
          name: chrome
          env:
            - name: TIMEOUT
              value: "30000"
            - name: EXIT_ON_HEALTH_FAILURE
              value: "true"
            - name: PRE_REQUEST_HEALTH_CHECK
              value: "true"
          envFrom:
            - secretRef:
                name: resume-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume
  labels:
    app: resume
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: resume
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: resume
    spec:
      containers:
        - image: amruthpillai/reactive-resume:latest
          imagePullPolicy: Always
          name: resume
          ports:
            - containerPort: 3000
              protocol: TCP
          env:
            - name: PORT
              value: "3000"
            - name: VITE_DISABLE_SIGNUPS
              value: "true"
            - name: CHROME_URL
              value: ws://chrome:3000
            - name: NODE_ENV
              value: production
            - name: STORAGE_ENDPOINT
              value: minio
            - name: STORAGE_PORT
              value: "9000"
            - name: STORAGE_BUCKET
              value: default
            - name: STORAGE_USE_SSL
              value: "false"
          envFrom:
            - secretRef:
                name: resume-secrets
