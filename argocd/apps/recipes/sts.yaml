apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: recipes
    tier: database
  name: recipes-postgresql
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: recipes
  serviceName: recipes-postgresql
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: recipes
        tier: database
      name: recipes-postgresql
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      containers:
        - name: recipes-db
          env:
            - name: POSTGRES_VOLUME_DIR
              value: /var/lib/postgresql
            - name: PGDATA
              value: /var/lib/postgresql/data
          envFrom:
            - secretRef:
                name: recipes
          image: postgres:16-alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U "postgres" -d "wiki" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ports:
            - containerPort: 5432
              name: postgresql
              protocol: TCP
          # readinessProbe:
          #   exec:
          #     command:
          #     - sh
          #     - -c
          #     - -e
          #     - |
          #       pg_isready -U "postgres" -d "wiki" -h 127.0.0.1 -p 5432
          #       [ -f /opt/bitnami/postgresql/tmp/.initialized ]
          #   failureThreshold: 6
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 5
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
      # dnsPolicy: ClusterFirst
      # initContainers:
      # - command:
      #   - sh
      #   - -c
      #   - |
      #     mkdir -p /bitnami/postgresql/data
      #     chmod 700 /bitnami/postgresql/data
      #     find /bitnami/postgresql -mindepth 0 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | \
      #       xargs chown -R 1001:1001
      #   image: docker.io/bitnami/minideb:stretch
      #   imagePullPolicy: Always
      #   name: init-chmod-data
      #   resources:
      #     requests:
      #       cpu: 250m
      #       memory: 256Mi
      #   securityContext:
      #     runAsUser: 0
      #   volumeMounts:
      #   - mountPath: /bitnami/postgresql
      #     name: data
      # restartPolicy: Always
      # securityContext:
      #   fsGroup: 1001
      serviceAccount: recipes
      serviceAccountName: recipes
      terminationGracePeriodSeconds: 30
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        storageClassName: nfs-storage
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
        volumeMode: Filesystem
