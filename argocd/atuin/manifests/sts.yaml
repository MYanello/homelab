apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  serviceName: postgres
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              protocol: TCP
          envFrom:
            - secretRef:
                name: atuin-secrets
          image: postgres:14@sha256:515cda353bc6ec67e1592db0973c7a5f829375bab7ad879f4e7ecf0c7e777c7f
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdata
          resources:
            requests:
              cpu: 150m
              memory: 1Gi
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  pg_isready --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}" || exit 1;
                  Chksum="$(psql --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
                  echo "checksum failure count is $$Chksum";
                  [ "$Chksum" = '0' ] || exit 1
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}"
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: pgdata
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: longhorn-xfs
        resources:
          requests:
            storage: 300Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: atuin
  name: atuin
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: atuin
  template:
    metadata:
      labels:
        app: atuin
    spec:
      securityContext:
        fsGroup: 1000        # Group ID for volume access
        runAsUser: 1000      # User ID to run the container
        runAsGroup: 1000     # Group ID for the process
      containers:
        #- command: ["sleep", "inf"]
        - args:
            - server
            - start
          envFrom:
            - secretRef:
                name: atuin-secrets
          env:
            - name: ATUIN_DB_URI
              valueFrom:
                secretKeyRef:
                  name: atuin-secrets
                  key: ATUIN_DB_URI
            - name: ATUIN_HOST
              value: 0.0.0.0
            - name: ATUIN_PORT
              value: "8888"
            - name: ATUIN_OPEN_REGISTRATION
              value: "true"
          image: ghcr.io/atuinsh/atuin:v18.8.0@sha256:8a8a8ef4eb5865656072bace5cc49390b56caa81360f9f0869054777155b6ef1
          imagePullPolicy: IfNotPresent
          name: atuin
          resources:
            limits:
              cpu: 250m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 1Gi
          ports:
            - containerPort: 8888
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 8888
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 8888
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
          - mountPath: /config
            name: atuin-config
      restartPolicy: Always
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: atuin-config
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: longhorn
        resources:
          requests:
            storage: 25Mi