apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: qbittorrent
  name: qbittorrent
spec:
  selector:
    matchLabels:
      app: qbittorrent
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - marcus-server
      containers:
        - name: qbittorrent
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            # - name: DOCKER_MODS
            #   value: "ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest"
          image: lscr.io/linuxserver/qbittorrent:5.1.1-r0-ls400@sha256:069bd76a79e95a3d42eed1bcdfcf295f47e76d47a3b216996ebe77f2d6b28b98
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "1Gi"
              cpu: 50m
            limits:
              memory: "6Gi"
              cpu: "2"
          ports:
            - name: qbit-webui
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data/media/torrents
              name: torrents
          # startupProbe:
          #   tcpSocket:
          #     port: 8080
          #   initialDelaySeconds: 120
          #   periodSeconds: 30
          #   timeoutSeconds: 5
          #   failureThreshold: 20
          # livenessProbe:
          #   tcpSocket:
          #     port: 8080
          #   initialDelaySeconds: 180
          #   periodSeconds: 30
          #   timeoutSeconds: 5
          #   failureThreshold: 10
      initContainers:
        - name: gluetun
          image: "ghcr.io/qdm12/gluetun:3.39.1@sha256:6a8058e626763cbf735ac2f78c774dbb24fec2490bd9d9f7d67e22592cb4a991"
          restartPolicy: Always
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-proxy
              containerPort: 8888
              protocol: TCP
            - name: tcp-shadowsocks
              containerPort: 8388
              protocol: TCP
            - name: udp-shadowsocks
              containerPort: 8388
              protocol: UDP
            - name: qbit-http
              containerPort: 8080
              protocol: TCP
          envFrom:
            - secretRef:
                name: vpn-secrets
          env:
            - name: TZ
              value: "America/Chicago"
            - name: FIREWALL_INPUT_PORTS
              value: "8080"
            - name: VPN_SERVICE_PROVIDER
              value: custom
            - name: VPN_TYPE
              value: wireguard
            - name: VPN_PORT_FORWARDING
              value: "on"
            - name: VPN_PORT_FORWARDING_PROVIDER
              value: protonvpn
            - name: FIREWALL_DEBUG
              value: "on"
          # - name: VPN_PORT_FORWARDING_UP_COMMAND
          #   value: /bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://qbittorrent:8080/api/v2/app/setPreferences 2>&1'
          # - name: DNS_KEEP_NAMESERVER
          #   value: "on"
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
          startupProbe:
            exec:
              command: ["/gluetun-entrypoint", "healthcheck"]
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command: ["/gluetun-entrypoint", "healthcheck"]
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config
        - name: torrents
          hostPath:
            path: /data/media/torrents
