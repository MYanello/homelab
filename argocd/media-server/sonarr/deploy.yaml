apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarr
  name: sonarr
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: sonarr
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - marcus-server
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: America/Chicago
          image: docker.io/linuxserver/sonarr:4.0.15@sha256:69d72f525bc181728c8f4788992a28ae1cd797ddd978f48bc2e271c7acd02e9b
          imagePullPolicy: IfNotPresent
          name: sonarr
          ports:
            - containerPort: 8989
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data/media
              name: media
          readinessProbe:
            httpGet:
              path: /
              port: 8989
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8989
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 10
          resources:
            limits:
              cpu: 200m
              memory: 600Mi
            requests:
              cpu: 10m
              memory: 200Mi
      restartPolicy: Always
      volumes:
        - name: config
          hostPath:
            path: /zpool/k8s/sonarr/config
        - name: media
          hostPath:
            path: /data/media
