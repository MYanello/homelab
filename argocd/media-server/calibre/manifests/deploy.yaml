apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: calibre-dl
  name: calibre-dl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calibre-dl
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: calibre-dl
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      containers:
        - env:
            - name: FLASK_PORT
              value: "8084"
            - name: FLASK_DEBUG
              value: 'false'
            - name: AA_DONATOR_KEY
              valueFrom:
                secretKeyRef:
                  name: calibre-secrets
                  key: AA_KEY
          image: harbor.yanello.net/ghcr-cache/calibrain/calibre-web-automated-book-downloader:v0.2.3@sha256:c2850991e99e278269003d92efa86e865f7df039093fbd03e85141b035cf7a80
          imagePullPolicy: IfNotPresent
          name: calibre-dl
          resources:
            limits:
              cpu: 250m
              memory: 2Gi
            requests:
              cpu: 50m
              memory: 100Mi
          ports:
            - containerPort: 8084
              protocol: TCP
          volumeMounts:
            - name: ingest
              mountPath: /cwa-book-ingest
          readinessProbe:
            httpGet:
              path: /
              port: 8084
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8084
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 5
      restartPolicy: Always
      volumes:
        - name: ingest
          persistentVolumeClaim:
            claimName: ingest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: 
    backup.velero.io/backup-volumes: "config,ingest,library"
  labels:
    app: calibre
  name: calibre
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calibre
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: calibre
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: '1000'
            - name: TZ
              value: "America/Chicago"
            - name: CWA_PORT_OVERRIDE
              value: "80"
          image: harbor.yanello.net/docker-hub-cache/crocodilestick/calibre-web-automated:latest@sha256:577e846f104fd21453ef306eefb4a95dd95b3b9ddd2463a150944494284da0fd
          imagePullPolicy: IfNotPresent
          name: calibre
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 250Mi
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
            - name: ingest
              mountPath: /cwa-book-ingest
            - name: library
              mountPath: /calibre-library
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 300
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 5
      restartPolicy: Always
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config
        - name: ingest
          persistentVolumeClaim:
            claimName: ingest
        - name: library
          persistentVolumeClaim:
            claimName: library
