apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: calibre-dl
  name: calibre-dl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calibre-dl
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: calibre-dl
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      containers:
        - env:
            - name: FLASK_PORT
              value: "8084"
            - name: FLASK_DEBUG
              value: 'false'
            - name: AA_DONATOR_KEY
              valueFrom:
                secretKeyRef:
                  name: calibre-secrets
                  key: AA_KEY
          image: ghcr.io/calibrain/calibre-web-automated-book-downloader:latest@sha256:6b25a35de28e31e91f13a86d1be227ef9eb61c034c4d7edf27f09c5c07ab29c0
          imagePullPolicy: IfNotPresent
          name: calibre-dl
          resources:
            limits:
              cpu: 250m
              memory: 2Gi
            requests:
              cpu: 50m
              memory: 100Mi
          ports:
            - containerPort: 8084
              protocol: TCP
          volumeMounts:
            - name: ingest
              mountPath: /cwa-book-ingest
          readinessProbe:
            httpGet:
              path: /
              port: 8084
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8084
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 5
      restartPolicy: Always
      volumes:
        - name: ingest
          persistentVolumeClaim:
            claimName: ingest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: calibre
  name: calibre
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calibre
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: calibre
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: '1000'
            - name: TZ
              value: "America/Chicago"
            - name: DOCKER_MODS
              value: lscr.io/linuxserver/mods:universal-calibre-v7.16.0
          image: crocodilestick/calibre-web-automated:latest@sha256:577e846f104fd21453ef306eefb4a95dd95b3b9ddd2463a150944494284da0fd
          imagePullPolicy: IfNotPresent
          name: calibre
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 250Mi
          ports:
            - containerPort: 8083
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
            - name: ingest
              mountPath: /cwa-book-ingest
            - name: library
              mountPath: /calibre-library
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 8083
          #   initialDelaySeconds: 60
          #   periodSeconds: 30
          #   timeoutSeconds: 5
          #   failureThreshold: 10
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 8083
          #   initialDelaySeconds: 300
          #   periodSeconds: 15
          #   timeoutSeconds: 5
          #   failureThreshold: 5
      restartPolicy: Always
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config
        - name: ingest
          persistentVolumeClaim:
            claimName: ingest
        - name: library
          persistentVolumeClaim:
            claimName: library
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: cloudflareproxy
#   name: cloudflareproxy
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: cloudflareproxy
#   strategy:
#     type: RollingUpdate
#     rollingUpdate:
#       maxUnavailable: 1
#       maxSurge: 1
#   template:
#     metadata:
#       labels:
#         app: cloudflareproxy
#     spec:
#       nodeSelector:
#         beta.kubernetes.io/arch: amd64
#       containers:
#         - image: ghcr.io/sarperavci/cloudflarebypassforscraping:latest@sha256:d1028839c2d6317a48e6e2139acaea5129bb3b089f0c5583f61fc162f1975de0
#           imagePullPolicy: IfNotPresent
#           resources:
#             limits:
#               cpu: 1000m
#               memory: 500Mi
#             requests:
#               cpu: 200m
#               memory: 500Mi
#           name: cloudflareproxy
#           ports:
#             - containerPort: 8000
#               protocol: TCP
#           readinessProbe:
#             tcpSocket:
#               port: 8000
#             initialDelaySeconds: 30
#             periodSeconds: 10
#             timeoutSeconds: 5
#             failureThreshold: 3
#           livenessProbe:
#             tcpSocket:
#               port: 8000
#             initialDelaySeconds: 60
#             periodSeconds: 15
#             timeoutSeconds: 5
#             failureThreshold: 3
#       restartPolicy: Always
