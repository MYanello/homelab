apiVersion: apps/v1
kind: Deployment
metadata:
  name: unpackerr
  labels:
    app: unpackerr
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: unpackerr
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: unpackerr
    spec:
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: America/Chicago
            - name: UN_DEBUG
              value: "false"
            - name: UN_SONARR_O_URL
              value: http://sonarr.sonarr.svc:8989
            - name: UN_SONARR_PATHS_0
              value: /data/torrents/completed/tv
            - name: UN_RADARR_0_URL
              value: http://radarr.radarr.svc:7878
            - name: UN_RADARR_PATHS_0
              value: /data/torrents/completed/movies
            - name: UN_LOG_FILE
              value: /data/logs/log.txt
            - name: UN_FOLDER_0_MOVE_BACK
              value: "true"
            - name: UN_FOLDER_0_PATH=/data/torrents/completed/tv/Key.And.Peele.S01-S05.DVDRip.XviD.x264-Scene
          envFrom:
            - secretRef:
                name: unpackerr-secrets
          image: golift/unpackerr:0.14.5@sha256:a9e7eb0d7b0ca16d2bdcb5af52eb4b544053ad6d915dd9b0f8383bc83f1df5cc
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
          name: unpackerr
          volumeMounts:
            - mountPath: /data/media
              name: media
          #   - name: logs
          #     mountPath: /data/logs
          #   - mountPath: /config/unpackerr.conf
          #     name: config
      volumes:
        - name: config
          configMap:
            name: config
        - name: logs
          emptyDir: {}
        - name: media
          nfs:
            server: marcus-server.lan
            path: /data/media
        # - name: config
        #   persistentVolumeClaim:
        #     claimName: config
        # - name: logs
        #   persistentVolumeClaim:
        #     claimName: logs
